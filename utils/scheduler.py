from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
import pytz

from datetime import datetime, timedelta
from db import get_all_users
from keyboards.main import build_reminder_keyboard, build_comeback_keyboard

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
moscow = pytz.timezone("Europe/Moscow")

scheduler = AsyncIOScheduler()

async def send_reminders(bot):
    print(f"üïí [{datetime.now()}] –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–æ–≤–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    today = datetime.now().date()
    users = get_all_users()

    for user in users:
        user_id, name, status, payment_date_str, next_reminder_str = user

        try:
            if status == "paid" and payment_date_str:
                payment_date = datetime.fromisoformat(payment_date_str).date()
                remind_date = payment_date + timedelta(days=27)
                expire_date = payment_date + timedelta(days=30)

                if remind_date <= today < expire_date:
                    await bot.send_message(
                        chat_id=user_id,
                        text=(
                            f"üèä‚Äç‚ôÄÔ∏è –ü—Ä–∏–≤–µ—Ç, {name}!\n"
                            "–°–∫–æ—Ä–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Ç–≤–æ—è –ø–æ–¥–ø–∏—Å–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏ –µ—ë üí≥"
                        ),
                        reply_markup=build_reminder_keyboard()
                    )
                elif today >= expire_date:
                    await bot.send_message(
                        chat_id=user_id,
                        text=(
                            "‚ùå –ú—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –æ–ø–ª–∞—Ç—É. "
                            "–î–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É SwimGlide –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω üò¢\n"
                            "‚ù§Ô∏è –ú—ã –∂–¥—ë–º —Ç–µ–±—è –æ–±—Ä–∞—Ç–Ω–æ!"
                        ),
                        reply_markup=build_comeback_keyboard()
                    )

            elif next_reminder_str:
                next_reminder = datetime.fromisoformat(next_reminder_str).date()
                if next_reminder <= today:
                    await bot.send_message(
                        chat_id=user_id,
                        text=(
                            f"üèä‚Äç‚ôÄÔ∏è –ü—Ä–∏–≤–µ—Ç, {name}!\n"
                            "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–Ω–µ—Å—Ç–∏ –ø–ª–∞—Ç—ë–∂ üí∞"
                        ),
                        reply_markup=build_reminder_keyboard()
                    )
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

def start_scheduler(bot):
    scheduler.add_job(
        send_reminders,
        CronTrigger(hour=10, minute=0, timezone=moscow),
        args=[bot]
    )
    scheduler.start()
    print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00 –ø–æ –ú–æ—Å–∫–≤–µ")
